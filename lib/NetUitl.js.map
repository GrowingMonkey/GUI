{"version":3,"sources":["../src/NetUitl.js"],"names":["checkStatus","response","status","resolve","error","reject","Error","goLogin","localhref","window","location","href","loginUrl","doFetch","url","type","params","callback","fetchUrl","fetchParams","method","credentials","headers","paramsArray","forEach","push","key","encodeURIComponent","search","join","body","fetch","then","res","json","catch","err","console","log","NetUitl","Component","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAGA,SAASA,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAIA,SAASC,MAAT,IAAmB,GAAnB,IAA0BD,SAASC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAO,kBAAQC,OAAR,CAAgBF,QAAhB,CAAP;AACD;AACD,oBAAQG,KAAR,CAAc,cAAd;AACA,SAAO,kBAAQC,MAAR,CAAe,IAAIC,KAAJ,CAAU,cAAV,CAAf,CAAP;AACD;AACD,SAASC,OAAT,GAAmB;AACjB,MAAMC,YAAYC,OAAOC,QAAP,CAAgBC,IAAlC;AACAF,SAAOC,QAAP,CAAgBC,IAAhB,GAAuBC,WAAW,qBAAX,GAAmCJ,SAA1D,CAFiB,CAEoD;AACtE;AACD,SAASK,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAC5C,MAAIC,WAAWJ,GAAf;AACA,MAAMK,cAAc;AAClBC,YAAQL,IADU;AAElBM,iBAAa,SAFK;AAGlBC,aAAS;AACP,sBAAgB;AADT;AAHS,GAApB;AAOA,MAAIP,SAAS,MAAT,IAAmBA,SAAS,KAA5B,IAAqCC,MAAzC,EAAiD;AAC/C,QAAMO,cAAc,EAApB;AACA,wBAAYP,MAAZ,EAAoBQ,OAApB,CAA4B;AAAA,aAC1BD,YAAYE,IAAZ,CAAoBC,GAApB,SAA2BC,mBAAmBX,OAAOU,GAAP,CAAnB,CAA3B,CAD0B;AAAA,KAA5B;AAGA,QAAIR,SAASU,MAAT,CAAgB,IAAhB,MAA0B,CAAC,CAA/B,EAAkC;AAChCV,wBAAgBK,YAAYM,IAAZ,CAAiB,GAAjB,CAAhB;AACD,KAFD,MAEO;AACLX,wBAAgBK,YAAYM,IAAZ,CAAiB,GAAjB,CAAhB;AACD;AACF,GAVD,MAUO;AACLV,gBAAYW,IAAZ,GAAmB,yBAAed,MAAf,CAAnB;AACD;AACD,SAAOe,MAAMb,QAAN,EAAgBC,WAAhB,EACJa,IADI,CACChC,WADD,EAEJgC,IAFI,CAEC;AAAA,WAAOC,IAAIC,IAAJ,EAAP;AAAA,GAFD,EAGJF,IAHI,CAGC,UAACE,IAAD,EAAU;AACd,QAAIA,KAAKhC,MAAL,KAAgB,KAApB,EAA2B;AACzBK;AACD;AACD,QAAIU,QAAJ,EAAc;AACZA,eAASiB,IAAT;AACD;AACD,WAAOA,IAAP;AACD,GAXI,EAYJC,KAZI,CAYE,UAACC,GAAD,EAAS;AACdC,YAAQC,GAAR,CAAYF,GAAZ;AACD,GAdI,CAAP;AAeD;;IACKG,O;;;;;;;;;;wBACOzB,G,EAAKE,M,EAAQC,Q,EAAU;AAChC,aAAOJ,QAAQC,GAAR,EAAa,KAAb,EAAoBE,MAApB,EAA4BC,QAA5B,CAAP;AACD;;;4BACaH,G,EAAKE,M,EAAQC,Q,EAAU;AACnCJ,cAAQC,GAAR,EAAa,QAAb,EAAuBE,MAAvB,EAA+BC,QAA/B;AACD;;;wBACUH,G,EAAKE,M,EAAQC,Q,EAAU;AAChCJ,cAAQC,GAAR,EAAa,KAAb,EAAoBE,MAApB,EAA4BC,QAA5B;AACD;;;yBACWH,G,EAAKE,M,EAAQC,Q,EAAU;AACjCJ,cAAQC,GAAR,EAAa,MAAb,EAAqBE,MAArB,EAA6BC,QAA7B;AACD;;;EAZmB,gBAAMuB,S;;AAe5BC,OAAOC,OAAP,GAAiBH,OAAjB","file":"NetUitl.js","sourcesContent":["import React from 'react';\r\nimport { message } from 'antd';\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return Promise.resolve(response);\r\n  }\r\n  message.error('网络请求错误,请稍后重试');\r\n  return Promise.reject(new Error('网络请求错误,请稍后重试'));\r\n}\r\nfunction goLogin() {\r\n  const localhref = window.location.href;\r\n  window.location.href = loginUrl + '?provider&referUrl=' + localhref; // eslint-disable-line\r\n}\r\nfunction doFetch(url, type, params, callback) {\r\n  let fetchUrl = url;\r\n  const fetchParams = {\r\n    method: type,\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  if (type !== 'POST' && type !== 'PUT' && params) {\r\n    const paramsArray = [];\r\n    Object.keys(params).forEach(key =>\r\n      paramsArray.push(`${key}=${encodeURIComponent(params[key])}`),\r\n    );\r\n    if (fetchUrl.search(/\\?/) === -1) {\r\n      fetchUrl += `?${paramsArray.join('&')}`;\r\n    } else {\r\n      fetchUrl += `&${paramsArray.join('&')}`;\r\n    }\r\n  } else {\r\n    fetchParams.body = JSON.stringify(params);\r\n  }\r\n  return fetch(fetchUrl, fetchParams)\r\n    .then(checkStatus)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      if (json.status === 10401) {\r\n        goLogin();\r\n      }\r\n      if (callback) {\r\n        callback(json);\r\n      }\r\n      return json;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\nclass NetUitl extends React.Component {\r\n  static get(url, params, callback) {\r\n    return doFetch(url, 'GET', params, callback);\r\n  }\r\n  static delete(url, params, callback) {\r\n    doFetch(url, 'DELETE', params, callback);\r\n  }\r\n  static put(url, params, callback) {\r\n    doFetch(url, 'PUT', params, callback);\r\n  }\r\n  static post(url, params, callback) {\r\n    doFetch(url, 'POST', params, callback);\r\n  }\r\n}\r\n\r\nmodule.exports = NetUitl;\r\n"]}